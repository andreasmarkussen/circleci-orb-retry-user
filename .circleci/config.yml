# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
  run-with-retry: kimh/run-with-retry@1.0.0
  #run-with-retry-and-clean: andreasmarkussen/run-with-retry-and-clean@0.0.1
  # run-with-retry-and-clean: andreasmarkussen/run-with-retry-and-clean@0.1.0
  # run-with-retry-and-clean: andreasmarkussen/run-with-retry-and-clean@0.1.0
  run-with-retry-and-clean: andreasmarkussen/run-with-retry-and-clean@dev:alpha2

# See https://circleci.com/docs/2.0/executor-types/
docker_image_default: &docker_image_default
    docker:
  #      - image: circleci
      - image: cimg/base:2020.01

jobs:
  build:
    <<: *docker_image_default
    steps:
      - checkout
      - run:
          name: The First Step
          command: |
            echo 'Hello World!'
            echo 'This is the delivery pipeline'
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'

  test:
    <<: *docker_image_default
    steps:
      - checkout
      - run:
          name: Create folder that will block things
          command: |
            echo "Creating the things needed to fail.. "
            mkdir -p ~/blocking-folder 
            echo JunkFile > ~/blocking-folder/data.txt
            ls -la ~/blocking-folder
            echo '#!/bin/sh' > run.sh
            echo 'echo Hello world!' >> run.sh
            echo 'ls theFolder' >> run.sh
            echo 'mkdir -p theFolder'  >> run.sh
      - run-with-retry/run-with-retry:
          # name: Run 'with retry'
          command: |
            sh run.sh
      - run-with-retry-and-clean/run-with-retry-and-clean:
          # name: Run 'with retry and clean '
          command: |
            echo "Setting pipefail"
            set +eo pipefail
            echo "I will exit fail status"
            ls -la
            sh ./mytest.sh
          clean-command: |
            echo "running clean command"
            rm -f blocking-files

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - build
      - test